#! /bin/bash

# This script is to generate mutated peptides based on VCF files 
# Designed for the vcf files generating from PANEL sequencing
# input is the VCF file
# output is the mutated protein of fasta format

# ANNOVAR tool location
ANNOVAR=/icgc/ngs_share/annovar/annovar_Feb2016
# path to directory where your scripts are located
PIPELINE_DIR=/icgc/dkfzlsdf/analysis/D120/scripts/panel_analysis
#####
# require the following scripts:
# convert2multiple_transcripts.sh
# separate_ref_mut_peptide.py
#####

usage() { echo "Usage: $0 -i PID -v vcf -l length -o outputDir
    -i: Sample ID
    -v: Path to VCF file
    -l: Length of expected neopeptides
    -o: Path to result folder
>>> Note: Absolute path needed" 1>&2; exit 1; }

while getopts ":i:v:l:o:" o; do
    case "${o}" in
        i)
            PID=${OPTARG}
            ;;
        v)
            VCF=${OPTARG}
            ;;
        l)
            LenPeptide=${OPTARG}
            ;;
        o)
            OUTPUT_DIR=${OPTARG}
            ;;
        *)
            usage
            ;;
    esac
done
shift $((OPTIND-1))

if [ -z "${PID}" ] || [ ! -f "${VCF}" ] || [ -z "${LenPeptide}" ]; then
    usage
fi

# create output folder if not available
if [ ! -d "${OUTPUT_DIR}" ];then
    mkdir -p ${OUTPUT_DIR}
fi
cd ${OUTPUT_DIR}

# file name of the predicted mutated and reference proteins 
predictedProtein=${OUTPUT_DIR}/${PID}_predictedProtein.fa

module load R/3.4.0
module load python/2.7.9
module load perl/5.20.2

# use ANNOVAR
perl $ANNOVAR/convert2annovar.pl -format vcf4old $VCF > $VCF.annovar
echo "perl $ANNOVAR/convert2annovar.pl -format vcf4old $VCF > $VCF.annovar"

# output file ${VCF}.annovar.exonic_variant_function is used for neopeptide prediction
perl $ANNOVAR/annotate_variation.pl -buildver hg19 $VCF.annovar $ANNOVAR/humandb/

# choose only nonsynonymous
sh $PIPELINE_DIR/convert2multiple_transcripts.sh $VCF.annovar.exonic_variant_function | grep nonsynonymous > $VCF.annovar.exonic_variant_function_multiple

## first column of ANNOVAR file has to be the defaul format. Replace with position coordinates is impossible
perl $ANNOVAR/coding_change.pl -includesnp  $VCF.annovar.exonic_variant_function_multiple $ANNOVAR/humandb/hg19_refGene.txt  $ANNOVAR/humandb/hg19_refGeneMrna.fa  | awk ' {if (substr($1,1,1)==">") {if (NF<5) print $1 "," $2 "," $3; else {mutated=$1 "," $2 "," $3 "," $4 "," $9 ":" $6 ":" $11; gsub(")","",mutated);print mutated}} else print}' > $predictedProtein

# generate protein NM accession and gene name pairs
awk 'BEGIN{FS="\t";OFS="\t"}{split($3,a,":");print a[2], a[1], $4"_"$5}' $VCF.annovar.exonic_variant_function_multiple | sort | uniq | awk '{if (NR==1){print "NM_accessions" "\t" "GENE", "\t" "chrPos"};print $0}'> ${OUTPUT_DIR}/map_NM_geneName


#### extract mutated and reference peptides from predicted protein fasta (e.g. 29aa)
# Three arguments are required
extendLen=$(expr $LenPeptide / 2 ) # length distance from the mutated position
outputMut=${OUTPUT_DIR}/${PID}_mut.fa
outputRef=${OUTPUT_DIR}/${PID}_ref.fa
python ${PIPELINE_DIR}/separate_ref_mut_peptide.py ${predictedProtein} $outputMut $outputRef $extendLen


#predict indel peptides based on raw annovar output
# Path to script to predict indel-based neopeptides
runIndels=${PIPELINE_DIR}/predict_peptides_indels.R
# path to file generated by ANNOVAR in previous step
annovarVar=${VCF}.annovar.exonic_variant_function

# create a new folder for indelbased neopeptide
mkdir ${OUTPUT_DIR}/indelBased_peptide
cd ${OUTPUT_DIR}/indelBased_peptide
# prediction of each indel, results are stored in current working directory
#grep -v "CHROM\|splicing\|stopgain\|synonymous" $annovarVar | awk -v aaLen=$LenPeptide -v run_predict_indels=$runIndels 'BEGIN {FS="\t"; OFS="\t"} {split($3,a,":");print "Rscript "  run_predict_indels " " $3 " " aaLen " " a[1] ".tab" }'
grep -v "CHROM\|splicing\|stopgain\|synonymous" $annovarVar | awk -v aaLen=$LenPeptide -v run_predict_indels=$runIndels 'BEGIN {FS="\t"; OFS="\t"} {split($3,a,":");print "Rscript "  run_predict_indels " " $3 " " aaLen " " a[1] ".tab" }' | xargs -I {} sh -c {}


 
